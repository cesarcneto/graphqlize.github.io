(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{142:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(164)),l={id:"graphqlize-update-4",title:"GraphQLize Update (#4) - Aggregate Functions & Group By.",author:"Tamizhvendan S",author_title:"Author, GraphQLize",author_url:"https://github.com/tamizhvendan",author_image_url:"https://avatars1.githubusercontent.com/u/1128916?v=4",tags:["announcement","clojure","java","graphql","postgres","mysql","scala","kotlin"]},o={permalink:"/blog/graphqlize-update-4",source:"@site/blog/_2020-20-05-graphqlize-update-4.md",description:"Hello World,",date:"2020-05-20T15:22:26.083Z",tags:[{label:"announcement",permalink:"/blog/tags/announcement"},{label:"clojure",permalink:"/blog/tags/clojure"},{label:"java",permalink:"/blog/tags/java"},{label:"graphql",permalink:"/blog/tags/graphql"},{label:"postgres",permalink:"/blog/tags/postgres"},{label:"mysql",permalink:"/blog/tags/mysql"},{label:"scala",permalink:"/blog/tags/scala"},{label:"kotlin",permalink:"/blog/tags/kotlin"}],title:"GraphQLize Update (#4) - Aggregate Functions & Group By.",readingTime:2.465,truncated:!0,nextItem:{title:"GraphQLize Update (#3) - Logical Operators & Filter by nested objects.",permalink:"/blog/graphqlize-update-3"}},c=[{value:"Aggregate Functions",id:"aggregate-functions",children:[{value:"Naming Convention",id:"naming-convention",children:[]}]},{value:"Aggregates Over Relationships",id:"aggregates-over-relationships",children:[]},{value:"GROUP BY",id:"group-by",children:[]},{value:"What&#39;s Next?",id:"whats-next",children:[]}],b={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Hello World, "),Object(i.b)("p",null,"The fourth sprint of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.graphqlize.org"}),"GraphQLize")," went according to the plan (fourth time in a row!), and the queries in GraphQLize has got an uplift through the aggregate functions and group-by support :). "),Object(i.b)("p",null,"Let's take a short tour of these new features."),Object(i.b)("h2",{id:"aggregate-functions"},"Aggregate Functions"),Object(i.b)("p",null,"GraphQLize supports the standard aggregate functions ",Object(i.b)("inlineCode",{parentName:"p"},"count"),", ",Object(i.b)("inlineCode",{parentName:"p"},"max"),", ",Object(i.b)("inlineCode",{parentName:"p"},"min"),", ",Object(i.b)("inlineCode",{parentName:"p"},"sum")," & ",Object(i.b)("inlineCode",{parentName:"p"},"avg"),". We can also use the ",Object(i.b)("inlineCode",{parentName:"p"},"GROUP-BY")," operation along with these aggregate functions."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"query {\n  courses {\n    countOfRating\n    avgOfRating\n    maxOfRating\n    minOfRating\n    sumOfRating\n  }\n}\n")),Object(i.b)("p",null,"The aggregate functions over columns are available as ",Object(i.b)("inlineCode",{parentName:"p"},"fields")," in the corresponding ",Object(i.b)("inlineCode",{parentName:"p"},"type")," representing the table."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Course {\n  # ...\n  rating: Int!\n\n  # ... aggregate functions as fields\n  avgOfRating: BigDecimal\n  countOfRating: Int!\n  maxOfRating: Int\n  minOfRating: Int\n  sumOfRating: Int\n  # ...\n}\n")),Object(i.b)("h3",{id:"naming-convention"},"Naming Convention"),Object(i.b)("p",null,"As seen in the above example, GraphQLize uses the name of the aggregate function (in camel case) along with the preposition ",Object(i.b)("inlineCode",{parentName:"p"},"Of")," as prefix to represent the aggregate functions as fields."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Column Name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Aggregate Function"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"first_name"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"count"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"countOfFirstName")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"payment"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sum"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sumOfPayment")))),Object(i.b)("h2",{id:"aggregates-over-relationships"},"Aggregates Over Relationships"),Object(i.b)("p",null,"We can use the aggregate functions over the relationship fields as well. "),Object(i.b)("p",null,"Let's assume that we have a schema like below "),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/author_course_er_diagram.png",alt:null}))),Object(i.b)("p",null,"We can get the total courses count and the average course rating of all the authors along with their first-name and last-name, using the following GraphQL query"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"query {\n  authors {\n    id\n    firstName\n    courses {\n      # highlight-next-line\n      countOfId \n      # highlight-next-line\n      avgOfRating\n    }\n  }\n}\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"countOfId")," field translates to ",Object(i.b)("inlineCode",{parentName:"p"},"count(id)")," in the SQL's select clause. The count of all rows via ",Object(i.b)("inlineCode",{parentName:"p"},"count(*)")," will be added in a future release."))),Object(i.b)("h2",{id:"group-by"},"GROUP BY"),Object(i.b)("p",null,"The aggregate functions often paired along with the GROUP BY operation and GraphQLize supports it out of the box!"),Object(i.b)("p",null,"For the above schema, we can group the courses by their rating and get their count using the following query"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"query {\n  # highlight-next-line\n  courses(groupBy: [rating]) {\n    rating\n    countOfRating\n  }\n}\n")),Object(i.b)("h2",{id:"whats-next"},"What's Next?"),Object(i.b)("p",null,"All my spare time went on building GraphQLize for the past six-plus months, and I also successfully delivered a client project at work during this time! "),Object(i.b)("p",null,"I keep getting the burnout feelings and the two-three days short breaks not working out. Hence I decided to stay away from doing programming outside my work for the next three weeks (til June 10,2020).  "),Object(i.b)("p",null,"I am committed to making this library production-ready, and I believe this break will enable me to get my focus and energy back on track!"),Object(i.b)("p",null,"I haven't planned the next iteration of GraphQLize yet. Most likely I will be working on supporting aggregate functions in the query filters and adding the ",Object(i.b)("inlineCode",{parentName:"p"},"having")," clause to filter group by values. "),Object(i.b)("p",null,"You can keep track of the progress by"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Following the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://twitter.com/graphqlize"}),"GraphQLize Twitter account")),Object(i.b)("li",{parentName:"ul"},"Joining ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://discord.gg/akkdPqf"}),"GraphQLize's Discord")),Object(i.b)("li",{parentName:"ul"},"Subscribing to ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://tinyletter.com/graphqlize-org"}),"GraphQLize's newsletter"))),Object(i.b)("p",null,"Cheers,",Object(i.b)("br",{parentName:"p"}),"\n","Tamizh"))}p.isMDXComponent=!0},164:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},g=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),g=a,h=s["".concat(l,".").concat(g)]||s[g]||u[g]||i;return n?r.a.createElement(h,o({ref:t},b,{components:n})):r.a.createElement(h,o({ref:t},b))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var b=2;b<i;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);