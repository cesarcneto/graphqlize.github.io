(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{122:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(1),r=a(6),c=(a(0),a(137)),o={id:"intro",title:"GraphQL Schema",sidebar_label:"Introduction"},i={id:"graphql_schema/intro",title:"GraphQL Schema",description:"The crux of GraphQLize is generating the GraphQL types and queries by making use of [JDBC metadata](https://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html). This page documents the conventions and assumptions behind this automatic generation.",source:"@site/docs/graphql_schema/intro.md",permalink:"/docs/graphql_schema/intro",editUrl:"https://github.com/graphqlize/graphqlize.github.io/tree/source/docs/graphql_schema/intro.md",sidebar_label:"Introduction",sidebar:"docs",previous:{title:"Vanilla Clojure",permalink:"/docs/getting_started/clojure/vanilla"},next:{title:"One To One",permalink:"/docs/graphql_schema/relationships/one-to-one"}},l=[{value:"GraphQL type name",id:"graphql-type-name",children:[]}],b={rightToc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The crux of GraphQLize is generating the GraphQL types and queries by making use of ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html"}),"JDBC metadata"),". This page documents the conventions and assumptions behind this automatic generation."),Object(c.b)("h2",{id:"graphql-type-name"},"GraphQL type name"),Object(c.b)("p",null,"For every tables and views in the database, GraphQLize generates a GraphQL type. The name of the GraphQL type is the singularized, pascal-case version of the corresponding table or view name."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Table/View Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"GraphQL Type Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"actor"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Actor")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"film_actor"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FilmActor")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"comments"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Comment")))),Object(c.b)("p",null,"GraphQlize supports Postgres ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.postgresql.org/docs/current/ddl-schemas.html"}),"schema"),". If the schema in question is not default schema (",Object(c.b)("inlineCode",{parentName:"p"},"public"),"), then it will be used as a prefix in the GraphQL type name."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Schema Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Table/View Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"GraphQL Type Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"person"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"state_province"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PersonStateProvince")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"human_resources"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"employee"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"HumanResourcesEmployee")))))}p.isMDXComponent=!0},137:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(a),u=n,d=s["".concat(o,".").concat(u)]||s[u]||m[u]||c;return a?r.a.createElement(d,i({ref:t},b,{components:a})):r.a.createElement(d,i({ref:t},b))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var b=2;b<c;b++)o[b]=a[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);