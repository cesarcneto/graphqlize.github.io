(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{117:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(2),b=(a(0),a(161));const r={id:"custom-scalar-types",title:"Custom Scalar Types",sidebar_label:"Custom Scalar Types"},l={id:"graphql_schema/custom-scalar-types",title:"Custom Scalar Types",description:"In addition to the GraphQL standard data types, GraphQLize supports the following scalar types for creating type-safe GraphQL schemas.",source:"@site/docs/graphql_schema/custom_scalar_types.md",permalink:"/docs/graphql_schema/custom-scalar-types",editUrl:"https://github.com/graphqlize/graphqlize.github.io/tree/source/docs/graphql_schema/custom_scalar_types.md",sidebar_label:"Custom Scalar Types",sidebar:"docs",previous:{title:"Relationships",permalink:"/docs/graphql_schema/relationships"},next:{title:"Querying tables by its primary key",permalink:"/docs/queries/query-by-primary-key"}},i=[{value:"UUID",id:"uuid",children:[]},{value:"Long",id:"long",children:[]},{value:"BigInteger",id:"biginteger",children:[]},{value:"BigDecimal",id:"bigdecimal",children:[]},{value:"Date",id:"date",children:[]},{value:"Time",id:"time",children:[]},{value:"TimeWithTimeZone",id:"timewithtimezone",children:[]},{value:"DateTime",id:"datetime",children:[]},{value:"DateTimeWithTimeZone",id:"datetimewithtimezone",children:[]}],c={rightToc:i};function p({components:e,...t}){return Object(b.b)("wrapper",Object(n.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(b.b)("p",null,"In addition to the GraphQL standard data types, GraphQLize supports the following scalar types for creating type-safe GraphQL schemas."),Object(b.b)("h2",{id:"uuid"},"UUID"),Object(b.b)("p",null,"A field whose value is ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Universally_unique_identifier"}),"UUID"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"UUID"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MySQL"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/graphqlize/graphqlize/issues/11"}),"Yet to support"))))),Object(b.b)("h2",{id:"long"},"Long"),Object(b.b)("p",null,"The long data type is a 64-bit two's complement integer (java.lang.Long)."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"bigint"),",",Object(b.b)("inlineCode",{parentName:"td"},"int8"),",",Object(b.b)("inlineCode",{parentName:"td"},"bigserial"),",",Object(b.b)("inlineCode",{parentName:"td"},"serial8"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MySQL"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"INT UNSIGNED"),",",Object(b.b)("inlineCode",{parentName:"td"},"BIGINT"))))),Object(b.b)("h2",{id:"biginteger"},"BigInteger"),Object(b.b)("p",null,"The long data type is a 64-bit two's complement integer (java.lang.Long)."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MySQL"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"BIGINT UNSIGNED"))))),Object(b.b)("h2",{id:"bigdecimal"},"BigDecimal"),Object(b.b)("p",null,"An arbitrary-precision signed decimal number (java.math.BigDecimal)"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"numeric"),", ",Object(b.b)("inlineCode",{parentName:"td"},"decimal"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MySQL"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"numeric"),", ",Object(b.b)("inlineCode",{parentName:"td"},"decimal"))))),Object(b.b)("h2",{id:"date"},"Date"),Object(b.b)("p",null,"A date without a time-zone in the ISO-8601 calendar system, such as ",Object(b.b)("inlineCode",{parentName:"p"},"2007-12-03")," (",Object(b.b)("inlineCode",{parentName:"p"},"java.time.LocalDate"),")."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"date"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MySQL"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"DATE"))))),Object(b.b)("h2",{id:"time"},"Time"),Object(b.b)("p",null,"A time without a time-zone in the ISO-8601 calendar system, such as ",Object(b.b)("inlineCode",{parentName:"p"},"10:15:30")," (",Object(b.b)("inlineCode",{parentName:"p"},"java.time.LocalTime"),")."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"time"),", ",Object(b.b)("inlineCode",{parentName:"td"},"time without time zone"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MySQL"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TIME"))))),Object(b.b)("h2",{id:"timewithtimezone"},"TimeWithTimeZone"),Object(b.b)("p",null,"A time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as ",Object(b.b)("inlineCode",{parentName:"p"},"10:15:30+01:00")," (",Object(b.b)("inlineCode",{parentName:"p"},"java.time.OffsetTime"),")."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"timetz"),", ",Object(b.b)("inlineCode",{parentName:"td"},"time with time zone"))))),Object(b.b)("h2",{id:"datetime"},"DateTime"),Object(b.b)("p",null,"A date-time without a time-zone in the ISO-8601 calendar system, such as ",Object(b.b)("inlineCode",{parentName:"p"},"2007-12-03T10:15:30")," (",Object(b.b)("inlineCode",{parentName:"p"},"java.time.LocalDateTime"),"). "),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"timestamp"),", ",Object(b.b)("inlineCode",{parentName:"td"},"timestamp without time zone"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MySQL"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"DATETIME"),", ",Object(b.b)("inlineCode",{parentName:"td"},"TIMESTAMP"))))),Object(b.b)("h2",{id:"datetimewithtimezone"},"DateTimeWithTimeZone"),Object(b.b)("p",null,"A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as ",Object(b.b)("inlineCode",{parentName:"p"},"2007-12-03T10:15:30+01:00")," (",Object(b.b)("inlineCode",{parentName:"p"},"java.time.OffsetDateTime"),")."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Database Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Column Type(s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Postgres"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"timestamptz"),", ",Object(b.b)("inlineCode",{parentName:"td"},"timestamp with time zone"))))))}p.isMDXComponent=!0},161:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return j}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var p=b.a.createContext({}),m=function(e){var t=b.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},o=function(e){var t=m(e.components);return b.a.createElement(p.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),o=m(a),d=n,j=o["".concat(l,".").concat(d)]||o[d]||O[d]||r;return a?b.a.createElement(j,i({ref:t},p,{components:a})):b.a.createElement(j,i({ref:t},p))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<r;p++)l[p]=a[p];return b.a.createElement.apply(null,l)}return b.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);