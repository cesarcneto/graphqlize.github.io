/*! For license information please see 8cf04913.e6367db6.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{116:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return d}));var n=a(1),r=(a(0),a(136)),b=a(140),l=a(141);const i={id:"types-and-fields",title:"Types & Fields",sidebar_label:"Types & Fields"},c={id:"graphql_schema/types-and-fields",title:"Types & Fields",description:'import Tabs from "@theme/Tabs";',source:"@site/docs/graphql_schema/types_and_fields.mdx",permalink:"/docs/graphql_schema/types-and-fields",editUrl:"https://github.com/graphqlize/graphqlize.github.io/tree/source/docs/graphql_schema/types_and_fields.mdx",sidebar_label:"Types & Fields",sidebar:"docs",previous:{title:"Vanilla Clojure",permalink:"/docs/getting_started/clojure/vanilla"},next:{title:"Relationships",permalink:"/docs/graphql_schema/relationships"}},p=[{value:"Type name",id:"type-name",children:[]},{value:"Field name",id:"field-name",children:[]},{value:"Field type",id:"field-type",children:[]}],o={rightToc:p};function d({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The crux of GraphQLize is generating the GraphQL types and queries by making use of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html"}),"JDBC metadata"),". This page documents the conventions and assumptions behind this automatic generation."),Object(r.b)("h2",{id:"type-name"},"Type name"),Object(r.b)("p",null,"For every tables and views in the database, GraphQLize generates a GraphQL type. The name of the GraphQL type is the singularized, ",Object(r.b)("em",{parentName:"p"},"PascalCase")," version of the corresponding table or view name."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Table/View Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"GraphQL Type Name"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"actor"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Actor")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"film_actor"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FilmActor")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"comments"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Comment")))),Object(r.b)("p",null,"GraphQlize supports Postgres ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.postgresql.org/docs/current/ddl-schemas.html"}),"schema"),". If the schema in question is not default schema (",Object(r.b)("inlineCode",{parentName:"p"},"public"),"), then it will be used as a prefix in the GraphQL type name."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Schema Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Table/View Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"GraphQL Type Name"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"person"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"state_province"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PersonStateProvince")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"human_resources"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"employee"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"HumanResourcesEmployee")))),Object(r.b)("div",{className:"admonition admonition-note"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Only table name is singularized and not the schema name."))),Object(r.b)("h2",{id:"field-name"},"Field name"),Object(r.b)("p",null,"The Field names of a generated GraphQL Type represent the column names of the corresponding database table. GraphQLize generates the field name by converting the column name to its ",Object(r.b)("em",{parentName:"p"},"camelCase")," version."),Object(r.b)("p",null,"For a table like below,"),Object(r.b)(b.a,{defaultValue:"postgres",values:[{label:"Postgres",value:"postgres"},{label:"MySQL",value:"mysql"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"postgres",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sql"}),"CREATE TABLE actor (\n  actor_id SERIAL PRIMARY KEY,\n  first_name character varying(45) NOT NULL,\n  last_name character varying(45) NOT NULL\n);\n"))),Object(r.b)(l.a,{value:"mysql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sql"}),"CREATE TABLE actor (\n  actor_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,\n  first_name VARCHAR(45) NOT NULL,\n  last_name VARCHAR(45) NOT NULL,\n  PRIMARY KEY  (actor_id)\n)\n")))),Object(r.b)("p",null,"GraphQLize generates a GraphQL type as "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-graphql"}),"type Actor {\n  actorId: Int!\n  firstName: String!\n  lastName: String!\n}\n")),Object(r.b)("h2",{id:"field-type"},"Field type"),Object(r.b)("p",null,"GraphQLize supports the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://graphql.org/learn/schema/#scalar-types"}),"standard GraphQL scalar types")," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/graphql_schema/custom-scalar-types"}),"some custom scalar types"),"."),Object(r.b)("p",null,"During the schema generation, GraphQLize checks the column's database type and convert it to a GraphQL scalar type. Refer the table below for the type conversion mapping."),Object(r.b)(b.a,{defaultValue:"postgres",values:[{label:"Postgres",value:"postgres"},{label:"MySQL",value:"mysql"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"postgres",mdxType:"TabItem"},Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"GraphQL Scalar Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Data Type(s)"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Int")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"integer"),", ",Object(r.b)("inlineCode",{parentName:"td"},"int"),", ",Object(r.b)("inlineCode",{parentName:"td"},"int2"),"  ",Object(r.b)("inlineCode",{parentName:"td"},"int4"),", ",Object(r.b)("inlineCode",{parentName:"td"},"bigint"),", ",Object(r.b)("inlineCode",{parentName:"td"},"int8"),", ",Object(r.b)("inlineCode",{parentName:"td"},"bigserial"),", ",Object(r.b)("inlineCode",{parentName:"td"},"serial8"),", ",Object(r.b)("inlineCode",{parentName:"td"},"smallint"),", ",Object(r.b)("inlineCode",{parentName:"td"},"smallserial"),", ",Object(r.b)("inlineCode",{parentName:"td"},"serial"),", ",Object(r.b)("inlineCode",{parentName:"td"},"serial2"),", ",Object(r.b)("inlineCode",{parentName:"td"},"serial4"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Float")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"real"),", ",Object(r.b)("inlineCode",{parentName:"td"},"float4"),", ",Object(r.b)("inlineCode",{parentName:"td"},"float8"),", ",Object(r.b)("inlineCode",{parentName:"td"},"double precision"),", ",Object(r.b)("inlineCode",{parentName:"td"},"money"),", ",Object(r.b)("inlineCode",{parentName:"td"},"numeric"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"String")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"bit"),", ",Object(r.b)("inlineCode",{parentName:"td"},"bit varying"),", ",Object(r.b)("inlineCode",{parentName:"td"},"char"),", ",Object(r.b)("inlineCode",{parentName:"td"},"character varying"),", ",Object(r.b)("inlineCode",{parentName:"td"},"varchar"),", ",Object(r.b)("inlineCode",{parentName:"td"},"citext"),", ",Object(r.b)("inlineCode",{parentName:"td"},"bpchar"),", ",Object(r.b)("inlineCode",{parentName:"td"},"macaddr8"),", ",Object(r.b)("inlineCode",{parentName:"td"},"text"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean"),", ",Object(r.b)("inlineCode",{parentName:"td"},"bool"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"UUID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"uuid")))))),Object(r.b)(l.a,{value:"mysql",mdxType:"TabItem"},Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"GraphQL Scalar Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Data Type(s)"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Int")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"SMALLINT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"MEDIUMINT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"INT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"TINYINT UNSIGNED"),", ",Object(r.b)("inlineCode",{parentName:"td"},"SMALLINT UNSIGNED"),", ",Object(r.b)("inlineCode",{parentName:"td"},"MEDIUMINT UNSIGNED"),", ",Object(r.b)("inlineCode",{parentName:"td"},"INT UNSIGNED,")," ",Object(r.b)("inlineCode",{parentName:"td"},"BIGINT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"YEAR"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Float")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"DECIMAL"),", ",Object(r.b)("inlineCode",{parentName:"td"},"NUMERIC"),", ",Object(r.b)("inlineCode",{parentName:"td"},"REAL"),", ",Object(r.b)("inlineCode",{parentName:"td"},"FLOAT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"DOUBLE"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"String")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"CHAR"),", ",Object(r.b)("inlineCode",{parentName:"td"},"VARCHAR"),", ",Object(r.b)("inlineCode",{parentName:"td"},"TINYTEXT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"TEXT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"MEDIUMTEXT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"LONGTEXT"),", ",Object(r.b)("inlineCode",{parentName:"td"},"ENUM"),", ",Object(r.b)("inlineCode",{parentName:"td"},"SET"),", ",Object(r.b)("inlineCode",{parentName:"td"},"BINARY"),", ",Object(r.b)("inlineCode",{parentName:"td"},"VARBINARY"),", ",Object(r.b)("inlineCode",{parentName:"td"},"TINYBLOB,")," ",Object(r.b)("inlineCode",{parentName:"td"},"BLOB"),", ",Object(r.b)("inlineCode",{parentName:"td"},"LONGBLOB"),", ",Object(r.b)("inlineCode",{parentName:"td"},"BIT"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/graphqlize/graphqlize/issues/10"}),"Yet to support"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"UUID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/graphqlize/graphqlize/issues/11"}),"Yet to support"))))))),Object(r.b)("div",{className:"admonition admonition-note"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"GraphQLize assumes ",Object(r.b)("inlineCode",{parentName:"p"},"String")," as a default GraphQL scalar data type for the field if the corresponding column database type is not mentioned in the above table."))))}d.isMDXComponent=!0},136:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),o=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},d=function(e){var t=o(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=o(a),s=n,O=d["".concat(l,".").concat(s)]||d[s]||m[s]||b;return a?r.a.createElement(O,i({ref:t},p,{components:a})):r.a.createElement(O,i({ref:t},p))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<b;p++)l[p]=a[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"},137:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var b=typeof n;if("string"===b||"number"===b)e.push(n);else if(Array.isArray(n)&&n.length){var l=r.apply(null,n);l&&e.push(l)}else if("object"===b)for(var i in n)a.call(n,i)&&n[i]&&e.push(i)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},140:function(e,t,a){"use strict";var n=a(0),r=a.n(n),b=a(137),l=a.n(b),i=a(86),c=a.n(i);const p=37,o=39;t.a=function(e){const{block:t,children:a,defaultValue:b,values:i}=e,[d,m]=Object(n.useState)(b),s=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:l()("tabs",{"tabs--block":t})},i.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":d===e,className:l()("tab-item",c.a.tabItem,{"tab-item--active":d===e}),key:e,ref:e=>s.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case o:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case p:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(s,e.target,e),onFocus:()=>m(e),onClick:()=>m(e)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===d)[0]))}},141:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);